Traceback (most recent call last):
  File "/home/ise/jsonDL/preliminary_trials/env/cnn.py", line 323, in step_in_mode_train
    tf_info, _, tf_done = next(tf_phased_train)
  File "/home/ise/jsonDL/src/train_process/tf/phased_normal.py", line 61, in phased_normal_train
    train_step(model, x, y, train_loss, train_optim, loss_metric_train, metrics_dict_train)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/eager/def_function.py", line 824, in __call__
    return self._python_function(*args, **kwds)
  File "/home/ise/jsonDL/src/train_process/tf/phased_normal.py", line 97, in train_step
    loss_value = loss(y, predicts)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/keras/losses.py", line 152, in __call__
    losses = call_fn(y_true, y_pred)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/keras/losses.py", line 256, in call
    return ag_fn(y_true, y_pred, **self._fn_kwargs)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/util/dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/keras/losses.py", line 1537, in categorical_crossentropy
    return K.categorical_crossentropy(y_true, y_pred, from_logits=from_logits)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/util/dispatch.py", line 201, in wrapper
    return target(*args, **kwargs)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/keras/backend.py", line 4833, in categorical_crossentropy
    target.shape.assert_is_compatible_with(output.shape)
  File "/home/ise/jsonDL/preliminary_trials/dqn/envs/tfpMedium/lib/python3.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 1134, in assert_is_compatible_with
    raise ValueError("Shapes %s and %s are incompatible" % (self, other))
ValueError: Shapes (100, 10) and (1, 10) are incompatible
